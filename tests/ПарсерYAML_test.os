#использовать "../src"
#Использовать asserts
#Использовать logos

Перем юТест;
Перем Лог;

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт

	юТест = Тестирование;

	ИменаТестов = Новый Массив;

	ИменаТестов.Добавить("ТестДолжен_ПростуюСтроку");
	// ИменаТестов.Добавить("ТестДолжен_ПроверитьПарсингОпций");
	// ИменаТестов.Добавить("ТестДолжен_ПроверитьПарсингМассивовОпций");

	Возврат ИменаТестов;

КонецФункции

Процедура ТестДолжен_ПростуюСтроку() Экспорт

	СтрокаПроверки = "
	|a: 1
	|  b: abc
	|  # comment
	|  E:
	|    # comment
	|    - 1
	|    - 2
	|    - 3 #comment
	|";
	
	Парсер = Новый ПарсерYAML;
	Результат = Парсер.ПрочитатьYAML(СтрокаПроверки);
	Лог.Отладка("Сообщаяю результат:");
	СообщитьСоответсвтвие(Результат);
КонецПроцедуры

Процедура СообщитьСоответсвтвие(Соотв)


	Для каждого Ключ Из Соотв Цикл
		Сообщить(Ключ.Ключ);
		Если ТипЗнч(Ключ.Значение) = Тип("Соответствие") Тогда
			СообщитьСоответсвтвие(Ключ.Значение);
		ИначеЕсли ТипЗнч(Ключ.Значение) = Тип("Массив") Тогда
			Для каждого Переменная Из Ключ.Значение Цикл
				Сообщить("- "+ Переменная);
			КонецЦикла;

		КонецЕсли;
		Сообщить(" -> "+ Ключ.Значение);
				
	КонецЦикла;
	
КонецПроцедуры

Функция ТестовыйСлучай(Знач ВерсииПроверки, Знач НижнийДиапазон, Знач ВерхнийДиапазон, Знач Результат)

	Тест = Новый Структура;
	Тест.Вставить("ВерсииПроверки",СтрРазделить(ВерсииПроверки, " "));
	Тест.Вставить("НижнийДиапазон",НижнийДиапазон);
	Тест.Вставить("ВерхнийДиапазон",ВерхнийДиапазон);
	Тест.Вставить("Результат",Результат);

	Возврат Тест;
КонецФункции

Лог = Логирование.ПолучитьЛог("oscript.lib.yaml");
Лог.УстановитьУровень(УровниЛога.Отладка);